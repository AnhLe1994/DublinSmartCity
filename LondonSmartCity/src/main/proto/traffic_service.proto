syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.londonsmartcity.traffic";
option java_outer_classname = "TrafficServiceProto";

package traffic;

// Traffic Management Service
service TrafficService {
  // Get current traffic status for a specific location
  rpc GetTrafficStatus (TrafficStatusRequest) returns (TrafficStatusResponse) {}
  
  // Update traffic signal timing
  rpc UpdateSignalTiming (SignalTimingRequest) returns (SignalTimingResponse) {}
  
  // Report traffic incident
  rpc ReportIncident (IncidentReport) returns (IncidentResponse) {}
  
  // Stream real-time traffic updates
  rpc StreamTrafficUpdates (TrafficUpdateRequest) returns (stream TrafficUpdate) {}
}

message TrafficStatusRequest {
  string location_id = 1;
  double latitude = 2;
  double longitude = 3;
}

message TrafficStatusResponse {
  string location_id = 1;
  int32 congestion_level = 2;  // 1-5 scale
  int32 average_speed = 3;     // in km/h
  string status = 4;           // "FLOWING", "MODERATE", "HEAVY"
  repeated string active_incidents = 5;
}

message SignalTimingRequest {
  string intersection_id = 1;
  int32 green_duration = 2;    // in seconds
  int32 yellow_duration = 3;   // in seconds
  int32 red_duration = 4;      // in seconds
}

message SignalTimingResponse {
  bool success = 1;
  string message = 2;
  string updated_timing = 3;
}

message IncidentReport {
  string incident_id = 1;
  string location = 2;
  string description = 3;
  string severity = 4;         // "LOW", "MEDIUM", "HIGH"
  double latitude = 5;
  double longitude = 6;
}

message IncidentResponse {
  bool success = 1;
  string message = 2;
  string incident_id = 3;
}

message TrafficUpdateRequest {
  string location_id = 1;
  bool subscribe = 2;
}

message TrafficUpdate {
  string location_id = 1;
  int32 congestion_level = 2;
  int32 average_speed = 3;
  string status = 4;
  repeated string active_incidents = 5;
  string timestamp = 6;
} 